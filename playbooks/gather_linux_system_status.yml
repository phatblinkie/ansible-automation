---
- name: Gather Linux System Status Data
  hosts: linux
  gather_facts: yes
  tasks:
    - name: Initialize system_status_results
      set_fact:
        system_status_results: []

    - name: Gather data from Linux hosts
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"
      block:
        - name: Gather Hostname
          shell: hostname
          register: hostname_output

        - name: Gather Ansible Ping
          ping:
          register: ansible_ping_output

        - name: Gather Disk Capacity
          shell: df -h / | tail -1 | awk '{print $5}'
          register: disk_capacity_output

        - name: Gather Process Usage
          shell: uptime | awk -F, '{ print $5 }' | xargs
          register: proc_usage_output

        - name: Gather App Check for sshd
          service:
            name: sshd
            state: started
          register: app_check_output

        - name: Append Linux data to results
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": hostname_output.stdout.strip(),
                  "ansible_ping": ansible_ping_output.ping,
                  "disk_capacity": disk_capacity_output.stdout.strip(),
                  "proc_usage": proc_usage_output.stdout_lines,
                  "app_check": app_check_output.state
                }]
              }}

      rescue:
        - name: Handle unreachable host
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": inventory_hostname,
                  "ansible_ping": "unreachable",
                  "disk_capacity": "N/A",
                  "proc_usage": ["N/A"],
                  "app_check": "N/A"
                }]
              }}

    - name: Save system status results
      local_action:
        module: copy
        content: "{{ system_status_results | to_nice_json }}"
        dest: /tmp/system_status_results.json
      delegate_to: localhost

- name: Post Linux System Status Data to Web URL
  hosts: localhost
  tasks:
    - name: Send custom data to web URL
      ansible.builtin.uri:
        url: "http://localhost/post/store_system_status.php?taskid={{ semaphore_vars.task_details.id }}"
        method: POST
        body_format: json
        body: "{{ lookup('file', '/tmp/system_status_results.json') }}"
        headers:
          Content-Type: application/json
        status_code: 200
        return_content: True
      register: postoutput

    - name: Output
      ansible.builtin.debug:
        msg:
          - "post output:"
          - "{{ postoutput }}"

    - name: Output results
      debug:
        msg: "{{ lookup('file', '/tmp/system_status_results.json') }}"

