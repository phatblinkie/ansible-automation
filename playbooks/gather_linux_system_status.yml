---
- name: Gather Linux System Status Data
  hosts: linux_hosts
  vars:
    - ansible_remote_tmp: /var/tmp/ans
    - host_key_checking: false
  gather_facts: yes
  tasks:
    - name: Initialize system_status_results
      set_fact:
        system_status_results: []

    - name: Gather data from Linux hosts
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"
      block:
        - name: Gather Hostname
          shell: hostname
          register: hostname_output

        - name: Gather Ansible Ping
          ping:
          register: ansible_ping_output

        - name: Gather Disk Capacity
          shell: df -h / | tail -1 | awk '{print $5}'
          register: disk_capacity_output

        - name: Gather Process Usage
          shell: uptime | awk -F, '{ print $5 }' | xargs
          register: proc_usage_output

        - name: Gather App Check for sshd
          service:
            name: sshd
            state: started
          register: app_check_output

        - name: Append Linux data to results
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": hostname_output.stdout.strip(),
                  "ansible_ping": ansible_ping_output.ping,
                  "disk_capacity": disk_capacity_output.stdout.strip(),
                  "proc_usage": proc_usage_output.stdout_lines,
                  "app_check": app_check_output.state
                }]
              }}

        - name: Send custom data to web URL
          ansible.builtin.uri:
            url: "http://localhost/post/store_system_status.php?taskid={{ semaphore_vars.task_details.id }}"
            method: POST
            body_format: json
            body: "{{ system_status_results }}"
            headers:
              Content-Type: application/json
            status_code: 200
            return_content: True
          register: postoutput
          delegate_to: localhost

      rescue:
        - name: Handle unreachable host
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": inventory_hostname,
                  "ansible_ping": "unreachable",
                  "disk_capacity": "N/A",
                  "proc_usage": ["N/A"],
                  "app_check": "N/A"
                }]
              }}

        - name: Send custom data to web URL - host was down
          ansible.builtin.uri:
            url: "http://localhost/post/store_system_status.php?taskid={{ semaphore_vars.task_details.id }}"
            method: POST
            body_format: json
            body: "{{ system_status_results }}"
            headers:
              Content-Type: application/json
            status_code: 200
            return_content: True
          register: postoutput
          delegate_to: localhost
